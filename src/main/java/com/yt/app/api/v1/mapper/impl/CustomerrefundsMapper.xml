<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yt.app.api.v1.mapper.CustomerrefundsMapper">
  <!-- 数据库列 -->
  <sql id="Base_Column_List">
     id,version,refundapplyid,staffid,staffjobid,customerid,customercode,campusid,chargepaytime,refundverifytime,refundrealmoney,createtime,taskid
  </sql>
  <!-- 基础返回对象封装 -->
  <resultMap id="ResultMap" type="com.yt.app.api.v1.entity.Customerrefunds">
         <id property="id" column="id" />
         <id property="version" column="version" />
         <id property="refundapplyid" column="refundapplyid" />
         <id property="staffid" column="staffid" />
         <id property="staffjobid" column="staffjobid" />
         <id property="customerid" column="customerid" />
         <id property="customercode" column="customercode" />
         <id property="campusid" column="campusid" />
         <id property="chargepaytime" column="chargepaytime" />
         <id property="refundverifytime" column="refundverifytime" />
         <id property="refundrealmoney" column="refundrealmoney" />
         <id property="createtime" column="createtime" />
         <id property="taskid" column="taskid" />
  </resultMap>
  <!-- 默认新增 -->
  <insert id="post" parameterType="com.yt.app.api.v1.entity.Customerrefunds">
  insert into customerrefunds (id,refundapplyid,staffid,staffjobid,customerid,customercode,campusid,chargepaytime,refundverifytime,refundrealmoney,createtime,taskid)
         values (#{id},#{refundapplyid},#{staffid},#{staffjobid},#{customerid},#{customercode},#{campusid},#{chargepaytime},#{refundverifytime},#{refundrealmoney},#{createtime},#{taskid})
  </insert>
  <!-- 默认删除id对象 -->
 <delete id="delete" parameterType="java.lang.String">
     delete from customerrefunds 
     where id = #{id}
 </delete>
  <!-- 默认更新id对象 -->
 <update id="put" parameterType="com.yt.app.api.v1.entity.Customerrefunds">
    update customerrefunds
         <set>
             <if test="version != null">
                   version = #{version}+1,
             </if>
             <if test="refundapplyid != null">
                   refundapplyid = #{refundapplyid},
             </if>
             <if test="staffid != null">
                   staffid = #{staffid},
             </if>
             <if test="staffjobid != null">
                   staffjobid = #{staffjobid},
             </if>
             <if test="customerid != null">
                   customerid = #{customerid},
             </if>
             <if test="customercode != null">
                   customercode = #{customercode},
             </if>
             <if test="campusid != null">
                   campusid = #{campusid},
             </if>
             <if test="chargepaytime != null">
                   chargepaytime = #{chargepaytime},
             </if>
             <if test="refundverifytime != null">
                   refundverifytime = #{refundverifytime},
             </if>
             <if test="refundrealmoney != null">
                   refundrealmoney = #{refundrealmoney},
             </if>
             <if test="createtime != null">
                   createtime = #{createtime},
             </if>
             <if test="taskid != null">
                   taskid = #{taskid}
             </if>
          </set>
     where id = #{id} and  version = #{version}
 </update>
  <!-- 默认获得id对象 -->
 <select id="get" parameterType="java.lang.String" resultMap="ResultMap">
     select
        <include refid="Base_Column_List" />
        from customerrefunds 
        where id = #{id}
 </select>
  <!-- 默认集合 -->
 <select id="list" parameterType="java.util.HashMap" resultMap="ResultMap">
       select
        <include refid="Base_Column_List" />
        from customerrefunds 
        <where>
        			1=1
             <if test="name != null and name != ''">
           		and name like "%"#{name}"%"
             </if>
             <if test="orderby != null and dir != null">
           		order by ${orderby} ${dir}
             </if>
             <if test="pageStart != null and pageEnd != null">
           		LIMIT #{pageStart},#{pageEnd}
             </if>
        </where>
 </select>
  <!-- 默认返回MAP集合 -->
 <select id="map" parameterType="java.util.HashMap" resultType="java.util.HashMap">
       select
        <include refid="Base_Column_List" />
        from customerrefunds 
        <where>
        			1=1
             <if test="name != null and name != ''">
           		and name like "%"#{name}"%"
             </if>
             <if test="orderby != null and dir != null">
           		order by ${orderby} ${dir}
             </if>
             <if test="pageStart != null and pageEnd != null">
           		LIMIT #{pageStart},#{pageEnd}
             </if>
        </where>
 </select>
  <!-- 默认集合统计 -->
 <select id="countlist" parameterType="java.util.HashMap" resultType="int">
       select count(*) from customerrefunds 
        <where>
        			1=1
             <if test="name != null and name != ''">
           		and name like "%"#{name}"%"
             </if>
        </where>
 </select>
  <!-- 默认返回MAP集合统计 -->
 <select id="countmap" parameterType="java.util.HashMap" resultType="int">
       select count(*) from customerrefunds 
        <where>
        			1=1
             <if test="name != null and name != ''">
           		and name like "%"#{name}"%"
             </if>
        </where>
 </select>
  <!-- 默认获取Ids的对象 -->
 <select id="listByArrayId" parameterType="java.util.HashMap" resultMap="ResultMap">
       select
        <include refid="Base_Column_List" />
        from customerrefunds 
        <where>
        1=1
             <if test="array != null and array != ''">
      		 	and id in
        			<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
           			#{item}
        			</foreach>
             </if>
        </where>
 </select>
</mapper>